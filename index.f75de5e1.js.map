{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,gBAAgB,CAAC;AACxC,MAAM,SAAS,SAAS,aAAa,CAAC;AAEtC,SAAS,SAAS,KAAK;IACrB,OAAO,SAAS,GAAG;IAEnB,MAAM,aAAa;WAAI;KAAM,CAAC,IAAI,CAAC,CAAC,KAAK;QACvC,MAAM,UAAU,cAAc,IAAI,OAAO,CAAC,MAAM;QAChD,MAAM,UAAU,cAAc,IAAI,OAAO,CAAC,MAAM;QAEhD,OAAO,UAAU;IACnB;IAEA,WAAW,OAAO,CAAC,CAAA;QACjB,OAAO,WAAW,CAAC;IACrB;AACF;AAEA,SAAS,aAAa,KAAK;IACzB,OAAO;WAAI;KAAM,CAAC,GAAG,CAAC,CAAA;QACpB,MAAM,UAAU,GAAG,OAAO;QAE1B,OAAO;YACL,GAAG,OAAO;YACV,MAAM,GAAG,SAAS;QACpB;IACF;AACF;AAEA,SAAS,cAAc,MAAM;IAC3B,OAAO,CAAC,OAAO,KAAK,CAAC,GAAG,OAAO,CAAC,KAAK;AACvC;AAEA,aAAa;AACb,SAAS","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst lists = document.querySelectorAll('li');\nconst elemUl = document.querySelector('ul');\n\nfunction sortList(nodes) {\n  elemUl.innerHTML = '';\n\n  const sortedList = [...nodes].sort((li1, li2) => {\n    const salary1 = convertSalary(li1.dataset.salary);\n    const salary2 = convertSalary(li2.dataset.salary);\n\n    return salary2 - salary1;\n  });\n\n  sortedList.forEach(node => {\n    elemUl.appendChild(node);\n  });\n}\n\nfunction getEmployees(nodes) {\n  return [...nodes].map(li => {\n    const example = li.dataset;\n\n    return {\n      ...example,\n      name: li.innerText,\n    };\n  });\n}\n\nfunction convertSalary(salary) {\n  return +salary.slice(1).replace(',', '');\n}\n\ngetEmployees(lists);\nsortList(lists);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}